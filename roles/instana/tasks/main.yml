---
- name: Ping auth-infra.instana.io works
  shell: ping -c 1 auth-infra.instana.io

- name: Docker is started on boot
  become: true
  shell: systemctl enable docker

- name: Data directory is created at /mnt/data
  become: true
  file:
    path: /mnt/data
    state: directory

- name: Traces directory is created at /mnt/traces
  become: true
  file:
    path: /mnt/traces
    state: directory

- name: Metrics directory is created at /mnt/metrics
  become: true
  file:
    path: /mnt/metrics
    state: directory

- name: Instana config is initialized
  become: true
  copy:
    dest: "/etc/apt/sources.list.d/instana-product.list"
    content: |
      deb [arch=amd64] https://self-hosted.instana.io/apt generic main
  when: ansible_distribution == 'Ubuntu' or ansible_distribution_version is version('20.04', '>=')

- name: The key is updated
  become: true
  shell: wget -qO - "https://self-hosted.instana.io/signing_key.gpg" | apt-key add -
  when: ansible_distribution == 'Ubuntu' or ansible_distribution_version is version('20.04', '>=')

- name: The update is run
  become: true
  shell: apt-get update --yes
  when: ansible_distribution == 'Ubuntu' or ansible_distribution_version is version('20.04', '>=')

- name: The instana console isinstalled
  become: true
  shell: apt-get install instana-console --yes
  when: ansible_distribution == 'Ubuntu' or ansible_distribution_version is version('20.04', '>=')

- name: Instana config is initialized
  become: true
  copy:
    dest: "/etc/apt/preferences.d/instana-console"
    content: |
      Package: instana-console
      Pin: version <version to pin>
      Pin-Priority: 1000  
  when: ansible_distribution == 'Ubuntu' or ansible_distribution_version is version('20.04', '>=')

- name: Instana config is initialized
  become: true
  copy:
    dest: "/etc/yum.repos.d/Instana-Product.repo"
    content: |
      [instana-product]
      name=Instana-Product
      baseurl=https://self-hosted.instana.io/rpm/release/product/rpm/generic/x86_64/Packages
      enabled=1
      gpgcheck=1
      repo_gpgcheck=1
      gpgkey=https://self-hosted.instana.io/signing_key.gpg
      priority=5
      sslverify=1
      #proxy=http://x.x.x.x:8080
      #proxy_username=
      #proxy_password=
  when: ansible_facts['os_family'] == "RedHat"

- name: yum makecache is complete
  become: true
  shell: yum makecache -y
  when: ansible_facts['os_family'] == "RedHat"

- name: Install instana-console
  become: true
  yum: 
    name:
      - instana-console
      - dnf-command(versionlock)
    state: present
  when: ansible_facts['os_family'] == "RedHat"

- name: Version lock instana-console
  become: true
  shell: yum versionlock add instana-console
  when: ansible_facts['os_family'] == "RedHat"

- name: Host name is retrieved
  become: true
  shell: hostname -f
  register: hostname

- name: Hostname is set
  become: true
  set_fact:
    FQDN: "{{ hostname.stdout }}"

- name: Instana directory is created
  become: true
  file:
    path: /instana
    state: directory

- name: Instana configuration file is copied
  become: true
  template:
    src: settings.hcl.j2
    dest: "/instana/settings.hcl"
    owner: root
    group: root
    mode: 0644

- name: Instana lock is removed if exists
  become: true
  file:
    path: /root/.instana/.cli-lock
    state: absent

- name: Cert directory is created at /instana/cert
  become: true
  file:
    path: /instana/cert
    state: directory

- name: Download mkcert Tool
  become: true
  get_url:
    url: https://github.com/FiloSottile/mkcert/releases/download/v1.4.3/mkcert-v1.4.3-linux-amd64
    dest: /instana/mkcert
    mode: 0755

- name: Create self-signed certificate
  become: true
  shell: ./mkcert -cert-file cert/tls.crt -key-file cert/tls.key "{{ instana_server_fqdn }}"
  args:
    chdir: /instana

- name: Instana is initialized
  become: true
  shell: /usr/bin/instana init --file settings.hcl --yes --force | tee -a installation.log
  args:
    chdir: /instana

- name: Instana License is downloaded
  become: true
  shell: /usr/bin/instana license download --key="{{ instana_sales_key }}"
  args:
    chdir: /instana

- name: Instana License is imported
  become: true
  shell: /usr/bin/instana license import --file=/instana/license
  args:
    chdir: /instana

- name: Instana License is verified
  become: true
  shell: /usr/bin/instana license verify
  args:
    chdir: /instana

- name: Instana is started
  become: true
  shell: /usr/bin/instana start
  args:
    chdir: /instana

- name: Print the Instana credential
  command: cat installation.log
  register: logs
  args:
    chdir: /instana
- debug: 
    var: logs.stdout_lines[-5:]